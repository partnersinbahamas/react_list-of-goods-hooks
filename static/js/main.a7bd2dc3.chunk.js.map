{"version":3,"sources":["components/App/App.tsx","components/GoodsList/GoodsList.jsx","index.tsx"],"names":["SortType","GoodsList","goods","sortType","reverse","useEffect","console","log","map","good","goodsFromServer","App","useState","setSortType","isReversed","setIsReversed","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","className","type","classNames","onClick","NONE","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,mEClBQC,EAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAgB3C,OAfAC,qBAAU,WAIR,OAFAC,QAAQC,IAAR,6BAAkCJ,EAAlC,MAEO,WAELG,QAAQC,IAAR,gCAAqCJ,EAArC,SAED,CAACA,IAEJE,qBAAU,WAERC,QAAQC,IAAR,oBAAyBH,EAAzB,QACC,CAACA,IAGF,6BACGF,EAAMM,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDdnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGV,K,YAAAA,E,gBAAAA,E,qBAAAA,M,KAME,IAAMW,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOT,EAAP,KAAiBU,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACMb,EAAK,UAAOQ,GAmBlB,OAjBAR,EAAMc,MAAK,SAACC,EAAYC,GACtB,OAAQf,GACN,KAAKH,EAASmB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFZ,EAAME,UAIN,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAyB,aAAbtB,IAEhBuB,QAAS,kBAAMb,EAAY,aAP7B,iCAYA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAyB,WAAbtB,IAEhBuB,QAAS,kBAAMb,EAAY,WAP7B,4BAYA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaX,IAEjBY,QAAS,WACPX,GAAeD,IARnB,qBAcCX,IAAaH,EAAS2B,MAAQb,GAE3B,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,EAAY,IACZE,GAAc,IALlB,sBAaN,cAAC,EAAD,CACEb,MAAOA,EACPC,SAAUA,EACVC,QAASU,QEvGjBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7bd2dc3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { GoodsList } from '../GoodsList/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  LENGTH = 'length',\n  ALPHABET = 'alphabet',\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const goods = [...goodsFromServer];\n\n  goods.sort((g1: string, g2: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== 'alphabet' },\n          )}\n          onClick={() => setSortType('alphabet')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== 'length' },\n          )}\n          onClick={() => setSortType('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {sortType !== SortType.NONE && isReversed\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType('');\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <GoodsList\n        goods={goods}\n        sortType={sortType}\n        reverse={isReversed}\n      />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\n\nexport const GoodsList = ({ goods, sortType, reverse }) => {\n  useEffect(() => {\n  // eslint-disable-next-line no-console\n    console.log(`Load sortType --- [${sortType}]`);\n\n    return () => {\n      // eslint-disable-next-line no-console\n      console.log(`Deleted sortType --- [${sortType}]`);\n    };\n  }, [sortType]);\n\n  useEffect(() => {\n  // eslint-disable-next-line no-console\n    console.log(`Reverse: [${reverse}]`);\n  }, [reverse]);\n\n  return (\n    <ul>\n      {goods.map((good) => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\n// import { App } from './App';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}